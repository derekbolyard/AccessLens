// src/_accesslens-theme.scss
// This file defines your custom Angular Material (M2) theme using the requested format.

// All @use statements must be at the top of this module.
@use '@angular/material' as mat;
@use 'sass:map';
@use 'sass:color';

// Import Google Font directly into your index.html file for proper Sass @use ordering.
// <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">


// --- 1. Define Custom M2 Palettes ---
// Use mat.m2-define-palette with Angular Material's built-in M2 color palettes.
$accesslens-primary-palette-m2: mat.m2-define-palette(mat.$m2-indigo-palette, 700, 300, 900); // Deep Indigo
$accesslens-accent-palette-m2: mat.m2-define-palette(mat.$m2-teal-palette, 600, 300, 800);   // Sophisticated Teal
$accesslens-warn-palette-m2: mat.m2-define-palette(mat.$m2-red-palette, 500);                // Standard Red


// --- 2. Define M2 Typography ---
// Using m2-prefixed functions for typography definition.
$accesslens-typography: mat.m2-define-typography-config(
  $font-family: 'Inter, sans-serif',
  $headline-5: mat.m2-define-typography-level(28px, 36px, 700),
  $headline-6: mat.m2-define-typography-level(22px, 30px, 600),
  $body-1: mat.m2-define-typography-level(16px, 24px, 400),
  $button: mat.m2-define-typography-level(15px, 22px, 600),
);

// --- 3. Define Light Theme in M2 format ---
$light-theme: mat.m2-define-light-theme((
  color: (
    primary: $accesslens-primary-palette-m2,
    accent: $accesslens-accent-palette-m2,
    warn: $accesslens-warn-palette-m2,
  ),
  typography: $accesslens-typography, // Assign typography to the theme
  density: 0,
));

// --- 4. Define Dark Theme in M2 format ---
// You can adjust primary/accent/warn colors for the dark theme if needed,
// or use the same palettes as the light theme for a simple inversion.
$dark-theme: mat.m2-define-dark-theme((
  color: (
    primary: $accesslens-primary-palette-m2, // You could define a darker primary here if desired
    accent: $accesslens-accent-palette-m2,
    warn: $accesslens-warn-palette-m2,
  ),
  typography: $accesslens-typography, // Assign typography to the theme
  density: 0,
));

// --- 5. Custom Component Overrides as Mixins ---
// These mixins apply custom styles beyond standard Material theming.
// They will be included in styles.scss with the specific theme.
@mixin accesslens-component-overrides($theme) {
  // Access M2 palette colors directly using mat.get-color-from-palette
  $primary-color: mat.get-color-from-palette(map.get($theme, color, primary), 500);

  // Buttons overrides
  .mat-button, .mat-raised-button, .mat-flat-button, .mat-stroked-button {
    border-radius: 12px;
    padding: 0.8rem 1.8rem;
    font-weight: 600;
    text-transform: none;
    transition: all 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
    transform: translateZ(0);
    box-shadow: none;
    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 8px 20px rgba(0,0,0,0.12);
    }
    &:active {
      transform: translateY(0);
      box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    }
  }

  // Icon button styling
  .mat-icon-button {
    border-radius: 50%;
    &:hover {
      background-color: rgba($primary-color, 0.08);
    }
  }

  // Cards overrides
  .mat-card {
    border-radius: 16px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.06);
    border: 1px solid rgba(0,0,0,0.04);
    padding: 32px;
    background-color: white;
  }

  // Form Fields (Input, Select, Textarea) overrides
  .mat-form-field {
    .mat-form-field-flex {
      border-radius: 8px;
      border: 1px solid #d0d0d0;
      padding: 0.75rem 1rem;
      background-color: #fefefe;
      transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
      &:hover {
        border-color: #b0b0b0;
      }
    }
    .mat-form-field-appearance-fill .mat-form-field-flex,
    .mat-form-field-appearance-outline .mat-form-field-outline {
        border: none;
    }
    &.mat-focused .mat-form-field-flex {
      border-color: $primary-color;
      box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
    }
    .mat-form-field-underline, .mat-form-field-ripple {
      display: none;
    }
    .mat-form-field-label {
      color: #888;
      font-size: 14px;
      font-weight: 500;
    }
    .mat-input-element {
      font-size: 16px;
      color: #333;
    }
  }

  // Checkbox & Radio Button overrides
  .mat-checkbox-frame, .mat-radio-outer-circle {
    border-color: #bdbdbd;
    border-width: 2px;
    border-radius: 4px;
  }
  .mat-checkbox-checked .mat-checkbox-background, .mat-radio-checked .mat-radio-inner-circle {
    background-color: $primary-color;
  }
  .mat-radio-inner-circle {
      transform: scale(0.65);
      transition: transform 0.2s cubic-bezier(0, 0, 0.2, 1);
  }
  .mat-checkbox-checkmark-path {
    stroke: white !important;
  }

  // Select overrides
  .mat-select {
    .mat-select-trigger {
      border: 1px solid #d0d0d0;
      border-radius: 8px;
      padding: 0.75rem 1rem;
      background-color: #fefefe;
      transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
      &:hover {
        border-color: #b0b0b0;
      }
    }
    &.mat-focused .mat-select-trigger {
      border-color: $primary-color;
      box-shadow: 0 0 0 3px rgba($primary-color, 0.2);
    }
    .mat-select-value {
      color: #333;
      font-size: 16px;
    }
    .mat-select-arrow {
      color: #888;
    }
  }

  // Progress Bar/Spinner overrides
  .mat-progress-bar-fill::after {
    background-color: $primary-color;
  }
  .mat-spinner::before {
    border-color: $primary-color transparent transparent transparent;
  }
}
